//jshint esversion:8
// code generated by chatgpt, fixed by wcyat
import { Client, Message } from "whatsapp-web.js";
import { Command } from "../types/command.js";
import db from "../db/index.js";

const execute = async (client: Client, msg: Message, args: string[]) => {
  const chatId = (await msg.getChat()).id._serialized;

  const chatsCollection = db("chats").coll;

  switch (args[0]) {
    case "add": {
      if (!msg.fromMe) {
        return;
      }
      if (!args[1]) {
        return await client.sendMessage(
          chatId,
          `Please provide a word to add to the blacklist.`,
        );
      }
      args.pop();
      const word = args.join(" ").toLowerCase();
      const chatDoc = await chatsCollection.findOne({ chatId });
      if (!chatDoc) {
        await chatsCollection.insertOne({
          chatId,
          blacklist: [word],
        });
      } else {
        await chatsCollection.updateOne(
          { chatId },
          { $push: { blacklist: word } },
        );
      }
      await client.sendMessage(
        chatId,
        `The word "${word}" has been added to the blacklist.`,
      );
      break;
    }
    case "remove": {
      if (!msg.fromMe) {
        return;
      }
      if (!args[1]) {
        return await client.sendMessage(
          chatId,
          `Please provide a word to remove from the blacklist.`,
        );
      }
      args.pop();
      const word = args.join(" ").toLowerCase();
      await chatsCollection.updateOne(
        { chatId },
        { $pull: { blacklist: word } },
      );
      await client.sendMessage(
        chatId,
        `The word "${word}" has been removed from the blacklist.`,
      );
      break;
    }
    case "list": {
      const chatDoc = await chatsCollection.findOne({ chatId });
      if (!chatDoc || !chatDoc.blacklist || !chatDoc.blacklist.length) {
        return await client.sendMessage(
          chatId,
          `There are no words in the blacklist.`,
        );
      }
      const wordList = chatDoc.blacklist.join(", ");
      await client.sendMessage(
        chatId,
        `The following words are in the blacklist: ${wordList}.`,
      );
      break;
    }
    default: {
      await client.sendMessage(
        chatId,
        `*Blacklist*\n\nManage a blacklist of words in a specific group.\n\n*Commands*\n\n!blacklist add [word]\n!blacklist remove [word]\n!blacklist list\n\n*How to Use*\n\nUse !blacklist add [word] to add a word to the blacklist. Use !blacklist remove [word] to remove a word from the blacklist. Use !blacklist list to see the current blacklist.\n\nNote: add and remove are only available to me`,
      );
      break;
    }
  }
};

const command: Command = {
  name: "blacklist",
  command: "!blacklist",
  description: "Manage a blacklist of words in a specific group.",
  commandType: "plugin",
  isDependent: false,
  help: `*Blacklist*\n\nManage a blacklist of words in a specific group.\n\n*Commands*\n\n!blacklist add [word]\n!blacklist remove [word]\n!blacklist list\n\n*How to Use*\n\nUse !blacklist add [word] to add a word to the blacklist. Use !blacklist remove [word] to remove a word from the blacklist. Use !blacklist list to see the current blacklist.\n\nNote: add and remove are only available to me`,
  execute,
  public: true,
};

export default command;
